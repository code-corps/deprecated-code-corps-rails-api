FORMAT: 1A
HOST: https://api.codecorps.org

# API Reference

The Code Corps API is a [JSON API](https://github.com/code-corps/code-corps-api)-based REST API built on Rails. You can visit the [API project on GitHub](https://github.com/code-corps/code-corps-api).

This document outlines how to interact with the API's resource-oriented URLs. JSON API errors returned by the API are also documented along with their HTTP status codes.

This API is intended for direct consumption by the Code Corps Ember application.

The production API can be found at `https://api.codecorps.org`.

The staging API can be found at `https://api.pbqrpbecf.org`.

The remote development API can be found at `https://api.pbqrpbecf-qri.org`.

# Authentication
When using the API's authenticated endpoints you can authenticate users by exchanging the `username` and `password` for an OAuth token.

## OAuth Token Exchange [/oauth/token]
Exchange credentials for `access_token`.

### Exchange credentials for token [POST]
+ Request
    + Attributes (OAuth Grant Request)
    + Headers

            Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
            Content-Type: application/x-www-form-urlencoded

+ Response 200 (application/json)
    + Attributes (OAuth Valid Response)

+ Response 401 (application/json)
    + Attributes (OAuth Invalid Response)

# Group Categories

## Category [/categories/new]

### Create a category [POST]

+ Request
  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 201 (application/vnd.api+json)

  + Attributes (Category Response)

+ Response 422 (application/vnd.api+json)

  + Attributes (Unprocessable Entity Response)

## Category [/categories/{id}]

### Retrieve a category [GET]

+ Request
  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 200 (application/vnd.api+json)

  + Attributes (Category Response)

+ Response 404 (application/vnd.api+json)

  + Attributes (Record Not Found Response)

## Category [/categories/{id}/edit]

### Update a category [PUT]

+ Request
  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 204 (application/vnd.api+json)

  + Attributes (No Content Response)

+ Response 404 (application/vnd.api+json)

  + Attributes (Record Not Found Response)

+ Response 409 (application/vnd.api+json)

  + Attributes (Creation Conflict Response)

## Categories [/categories]

### List all categories [GET]

+ Request
  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 200 (application/vnd.api+json)

  + Attributes (Categories Response)

# Group Comment Images

## Comment Image [/comment_images]

### Create a Comment Image [POST]

+ Request
  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Bearer 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 201 (application/vnd.api+json)

  + Attributes (Comment Image Response)

+ Response 422 (application/vnd.api+json)

  + Attributes (Unprocessable Entity Response)

# Group Comment User Mentions

# Group Comments

# Group Github Repositories

# Group Import Skill Failures

# Group Imports

# Group OAuth Applications

# Group Organization Memberships

# Group Organizations

# Group Ping

# Group Post Images

# Group Post Likes

# Group Post User Mentions

# Group Posts

# Group Preview User Mentions

# Group Previews

## Preview [/previews]

### Create a preview [POST]

+ Request

  + Attributes (OAuth Grant Request)

+ Headers

  Authorization: Bearer {access_token}

+ Response 201 (application/vnd.api+json)

  + Attributes (Preview Response)

+ Response 401 (application/json)

  + Attributes (OAuth Invalid Response)

+ Response 422 (application/vnd.api+json)

  + Attributes (Unprocessable Entity Response)

# Group Project Categories

# Group Project Roles

# Group Projects

# Group Roles

# Group Role Skills

# Group Skills

# Group Slugged Routes

# Group User Categories

# Group User Roles

# Group User Skills

# Group Users

## User [/users/{id}]

+ Parameters

  + id: 1 (string, required)

  + theme (enum[string], optional)

        + Default: `light`

        + Members
          + `light`
          + `dark`

### Retrieve a user [GET]

+ Relation: self

+ Request
    + Attributes (OAuth Grant Request)

    + Headers

            Authorization: Basic 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8

+ Response 200 (application/vnd.api+json)

  + Attributes (User Response)

+ Response 404 (application/vnd.api+json)

  + Attributes (Record Not Found Response)

# Data Structures

## Category (object)
+ name: `Category` (required, string)
+ slug: `cat1` (required, string)
+ description: `This is the category description` (string)

## Categories Relationship (object)
+ id: 1 (string)
+ type: categories (string)

## Category Relationships Base (object)
+ include Project Categories Relationship

## Category Response (object)
+ data
  + id: `1` (string)
  + type: `categories` (string)
  + attributes(Category, required)
  + relationships(Category Relationships Base, required)

## Categories Response (object)
+ categories
  + data(array[Category], required)

## Comment Image (object)
+ filename: `file name` (string)

## Comment Image Relationships Base (object)
+ comment
  + data(Comments Relationship)
+ user
  + data(Users Relationship)

## Comment Image Response Base (object)
+ id: `1` (string)
+ type: `comment_images` (string)
+ attributes(Comment Image)
+ relationships(Comment Image Relationships Base)

## Comment Image Response (object)
+ data(Comment Image Response Base)

## Comments Relationship (object)
+ id: 1 (string)
+ type: comments (string)

## Creation Conflict Response (object)
+ title: `Conflict` (string)

+ detail: `{Object} with 'id'={id} already created` (string) - Details of what record was already there.

+ status: 409 (number) - HTTP status code

## No Content Response (object)

+ title: `No Content` (string)

+ status: 204 (number) - HTTP status code

## OAuth Grant Request (object)
  + grant_type: `password` (string, required)
  + username: `josh@coderly.com` (string, required) - The user's email address.
  + password: `password` (string, required)

## OAuth Invalid Response (object)
  + id: `INVALID_GRANT` (string, required)
  + title: `Invalid grant` (string, required)
  + detail: `The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.` (string, required)
  + status: 401 (number, required)

## OAuth Valid Response (object)
  + access_token: `5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8` (string, required)
  + token_type: `bearer` (string, required)
  + expires_in: 7200 (number, required)
  + refresh_token: `f160d958cab936626305062dc594c2cadb12712ebc7cbca091a27ec4921b91d8` (string, required)
  + created_at: 1468283904 (number, required)
  + user_id: 1 (number, required)

## Organizations Relationship (object)
+ id: 1 (string)
+ type: organizations (string)

## Preview (object)
+ body: `<p>A <strong>strong</strong> preview</p>` (string)
+ markdown: `A *strong* preview` (string)

## Preview Response Base (object)
+ id: `1` (string)
+ type: `previews` (string)
+ attributes(Preview, required)
+ relationships(Preview Relationships Base, required)

## Preview Response (object)
+ data(Preview Response Base)

## Previews Relationship (object)
+ id: 1 (string)
+ type: previews (string)

## Preview Relationships Base (object)
+ include Users Relationship
+ include Preview User Mentions Relationship

## Preview User Mentions Relationship (object)
+ id: 1 (string)
+ type: preview_user_mentions (string)

## Project Categories Relationship (object)
+ id: 1 (string)
+ type: project_categories (string)

## Projects Relationship (object)
+ id: 1 (string)
+ type: projects (string)

## Record Not Found Response Base (object)
+ id: `RECORD_NOT_FOUND` (string)

+ title: `Record not found` (string)

+ detail: `Couldn't find {object} with 'id'={id}` (string) - Details of what record was not found.

+ status: 404 (number) - HTTP status code

## Record Not Found Response (object)
+ errors(array[Record Not Found Response Base], required)

## Roles Relationship (object)
+ id: 1 (string)
+ type: roles (string)

## Skills Relationship (object)
+ id: 1 (string)
+ type: skills (string)

## Unprocessable Entity Response (object)
+ title: `Unprocessable Entity`

+ status: 422 (number) - HTTP status code

## User (object)
+ email: `team@codecorps.org` (string)
+ theme: `light` (string)

  The theme is either `light` or `dark`.

## User Categories Relationship (object)
+ id: 1 (string)
+ type: user_categories (string)

## User Relationships Base (object)
+ include User Roles Relationships
+ include User Skills Relationships

## User Response (object)
+ data
  + id: `1` (string)
  + type: `users` (string)
  + attributes(User, required)
  + relationships(User Relationships Base, required)

## User Roles Relationship (object)
+ id: 1 (string)
+ type: user_roles (string)

## User Roles Relationships (object)
+ user_roles
  + data(array[User Roles Relationship], required)

## User Skills Relationship (object)
+ id: 1 (string)
+ type: user_skills (string)

## User Skills Relationships (object)
+ user_skills
  + data(array[User Skills Relationship], required)

## Users Relationship (object)
+ id: 1 (string)
+ type: users (string)
